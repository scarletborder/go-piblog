// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	archives "biz/internal/handler/archives"
	blogs "biz/internal/handler/blogs"
	collection "biz/internal/handler/collection"
	recommend "biz/internal/handler/recommend"
	test "biz/internal/handler/test"
	"biz/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/:page",
				Handler: archives.GetArchivesBlogIdsHandler(serverCtx),
			},
		},
		rest.WithPrefix("/v1/archives"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/content/:id",
				Handler: blogs.GetBlogHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/info",
				Handler: blogs.GetBlogBriefsHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/info/:id",
				Handler: blogs.GetBlogBriefHandler(serverCtx),
			},
		},
		rest.WithPrefix("/v1/blog"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/get_brief",
				Handler: collection.GetCollectionBriefHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/get_latest",
				Handler: collection.GetCollectionLatestHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/get_page",
				Handler: collection.GetCollectionPageHandler(serverCtx),
			},
		},
		rest.WithPrefix("/v1/collection"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/blog/latest",
				Handler: recommend.GetLatestBlogIdsHandler(serverCtx),
			},
		},
		rest.WithPrefix("/v1/recommend"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/ping",
				Handler: test.PingHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/version",
				Handler: test.VersionHandler(serverCtx),
			},
		},
		rest.WithPrefix("/v1"),
	)
}
