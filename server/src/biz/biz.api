syntax = "v1"

info (
	title:   "go-piblogAPI"
	desc:    "go-piblog的api文档,提供前端请求所需的各种资源"
	author:  "scarletborder"
	email:   "baishuibeef@gmail.com"
	version: "1.0"
)

type VersionResp {
	Version int64 `json:"Version"`
}

// 调试api
@server (
	prefix: /v1
	group:  test
)
service biz-api {
	@handler ping
	get /ping

	@handler version
	get /version returns (VersionResp)
}

// blog inforamtion api
type BlogIdReq {
	ID string `path:"id"`
}

type BlogIdsReq {
	IDs []string `json:"ids"`
}

type BlogIdsResp {
	IDs []string `json:"ids"`
}

type BlogBriefResp {
	ID         string   `json:"id"`
	Title      string   `json:"title"`
	Tags       []string `json:"tags"`
	Brief      string   `json:"brief"`
	CreateTime uint64   `json:"c_time"`
}

type BlogDetailResp {
	ID         string   `json:"id"`
	Title      string   `json:"title"`
	Tags       []string `json:"tags"`
	Content    string   `json:"content"`
	CreateTime uint64   `json:"c_time"`
}

@server (
	prefix: /v1/blog
	group:  blogs
)
service biz-api {
	@handler getBlogBrief
	get /info/:id (BlogIdReq) returns (BlogBriefResp)

	@handler getBlog
	get /content/:id (BlogIdReq) returns (BlogDetailResp)

	@handler getBlogBriefs
	post /info (BlogIdsReq) returns ([]BlogBriefResp)
}

// recommend api

@server (
	prefix: /v1/recommend
	group:  recommend
)
service biz-api {
	@handler getLatestBlogIds
	get /blog/latest returns (BlogIdsResp)
}

// archives api
type ArchivesBlogIdsReq {
	Page int `path:"page"`
}

type ArchivesBlogIdsResp {
	BlogIdsResp *BlogIdsResp `json:"blogidsresp"`
	MaxPages    int          `json:"maxpages"`
}

@server(
	prefix: /v1/archives
	group: archives
)
service biz-api {
	@handler getArchivesBlogIds
	get /:page (ArchivesBlogIdsReq) returns(ArchivesBlogIdsResp)
}

// collection api

// 请求现有的collections
type CollectionPageReq {
	// TODO: currently is not used,
	// latter will used to mark different page in differ page of request
	// if not provided, default value is 0, which means start of pages
	Page int `json:"page"`

	// TODO: will be used to query
	Name string `json:"name"`
}

type CollectionResp {
	Name  string   `json:"name"`
	Brief string   `json:"brief"`
	IDs   []string `json:"ids"`
}

type CollectionPageResp {
	MaxPages        int                   `json:"maxpages"`
	CollectionResps []*CollectionPageResp `json:"collectionsresps"`
}

@server(
	prefix: /v1/collection
	group: collection
)
service biz-api {
	@handler getCollectionPage
	get /get_page (CollectionPageReq) returns (CollectionPageResp)
}